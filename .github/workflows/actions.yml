name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: backend-services-documents
  DOCKERHUB_USER: ${{ vars.DOCKERHUB_USER }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build TypeScript
        run: npm run build

      - name: Extract version from package.json
        id: extract_version
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          DATE_VERSION="$PACKAGE_VERSION-$(date +%Y%m%d%H%M%S)"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "DATE_VERSION=$DATE_VERSION" >> $GITHUB_ENV

      - name: Persist versions for next job
        run: |
          echo "$PACKAGE_VERSION" > version.txt
          echo "$DATE_VERSION" > date_version.txt

      - name: Upload artifacts for the next job
        uses: actions/upload-artifact@v3
        with:
          name: version-files
          path: |
            version.txt
            date_version.txt

  docker-build:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download version artifacts
        uses: actions/download-artifact@v3
        with:
          name: version-files

      - name: Load version variables
        id: load_version
        run: |
          PACKAGE_VERSION=$(cat version.txt)
          DATE_VERSION=$(cat date_version.txt)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
          echo "DATE_VERSION=$DATE_VERSION" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image with both tags
        run: |
          docker build -t ${{ env.DOCKERHUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DATE_VERSION }} .
          docker push ${{ env.DOCKERHUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DATE_VERSION }}
          docker tag ${{ env.DOCKERHUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.PACKAGE_VERSION }} ${{ env.DOCKERHUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ env.DOCKERHUB_USER }}/${{ env.DOCKER_IMAGE_NAME }}:latest

      - name: Logout from DockerHub
        run: docker logout